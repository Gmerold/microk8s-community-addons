---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sriov-device-plugin
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-sriov-device-plugin-amd64
  namespace: kube-system
  labels:
    tier: node
    app: sriovdp
spec:
  selector:
    matchLabels:
      name: sriov-device-plugin
  template:
    metadata:
      labels:
        name: sriov-device-plugin
        tier: node
        app: sriovdp
    spec:
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      serviceAccountName: sriov-device-plugin
      containers:
        - name: kube-sriovdp
          image: nfvpe/sriov-device-plugin:v3.3
          imagePullPolicy: IfNotPresent
          args:
            - --log-dir=sriovdp
            - --log-level=10
          securityContext:
            privileged: true
          volumeMounts:
            - name: devicesock
              mountPath: /var/lib/kubelet/
              readOnly: false
            - name: log
              mountPath: /var/log
            - name: config-volume
              mountPath: /etc/pcidp
            - name: device-info
              mountPath: /var/run/k8s.cni.cncf.io/devinfo/dp
      volumes:
        - name: devicesock
          hostPath:
            path: /var/lib/kubelet/
        - name: log
          hostPath:
            path: /var/log
        - name: device-info
          hostPath:
            path: /var/run/k8s.cni.cncf.io/devinfo/dp
            type: DirectoryOrCreate
        - name: config-volume
          configMap:
            name: sriovdp-config
            items:
              - key: config.json
                path: config.json
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: init-net
spec:
  selector:
    matchLabels:
      name: init-net
  template:
    metadata:
      labels:
        name: init-net
    spec:
      containers:
        - name: init-sriov-plugin
          image: docker.io/omecproject/omec-cni:1.1.4
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - >
              yes | cp /tmp/cni/bin/{vfioveth,static} /host/opt/cni/bin/;
              chmod +x /host/opt/cni/bin/vfioveth;
              chmod +x /host/opt/cni/bin/static;
              trap : TERM INT; sleep infinity & wait;
          volumeMounts:
            - name: cni-bin
              mountPath: /host/opt/cni/bin
      volumes:
        - name: cni-bin
          hostPath:
            path: "$SNAP_DATA/opt/cni/bin/"