#!/usr/bin/env python3

import json
import os
import subprocess
import tempfile

import click

KUBECTL = os.path.expandvars("$SNAP/microk8s-kubectl.wrapper")
SCRIPT_PATH = os.path.abspath(os.path.dirname(__file__))


@click.command()
@click.option(
    "--resource",
    "-r",
    "resources",
    required=True,
    type=(str, str),
    multiple=True,
    help="{\"${RESOURCE_NAME\": \"${PCI_ADDRESS}\"}"
)
def main(resources):
    resources = dict(resources)
    resources_list = [
        {"resourceName": resource_name, "selectors": {"pciAddress": [pci_address]}}
        for resource_name, pci_address in resources.items()
    ]

    sriovdp_config_manifest = {
        "apiVersion": "v1",
        "kind": "ConfigMap",
        "metadata": {
            "name": "sriovdp-config",
            "namespace": "kube-system"
        },
        "data": {
            "config.json": json.dumps({"resourceList": resources_list})
        }
    }

    click.echo("Enabling SRIOV device plugin...")

    # with tempfile.NamedTemporaryFile(mode="w+") as sriovdp_config:
    #     json.dump(sriovdp_config_manifest, sriovdp_config)
    #     sriovdp_config.flush()
    #
    #     subprocess.check_call([KUBECTL, "apply", "-f", sriovdp_config.name])
    subprocess.check_call([KUBECTL, "apply", "-f", os.path.join(SCRIPT_PATH, "sriovdp.yaml")])

    click.echo("SRIOV device plugin is now enabled.")


if __name__ == "__main__":
    main()
